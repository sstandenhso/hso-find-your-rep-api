# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js project to Azure Function App - hso-find-your-rep-api

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup Node 20.x Environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.x' # Use Node.js 20 LTS for consistency with Azure V4

      - name: 'Install Azure Functions Core Tools'
        run: npm install -g azure-functions-core-tools@4 # Use version 4

      - name: 'Resolve Project Dependencies and Build'
        shell: bash
        run: |
          set -euxo pipefail # Added for strict error checking
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          echo "Current directory after pushd: $(pwd)" # Debug print
          npm install
          npm run build # Your TypeScript compilation (tsc)
          echo "Contents of dist directory after build:" # Debug print
          ls -l dist # Debug print
          popd

      - name: 'Package Function App for Deployment'
        shell: bash
        run: |
          set -euxo pipefail # Added for strict error checking
          echo "Starting func pack command..." # Debug print
          # Execute func pack with verbose output and direct it to a log file
          # We'll then cat the log file to see all output
          func pack --output ./functionapp --language node --typescript --verbose 2>&1 | tee func_pack_output.log
          
          # Check the exit code of func pack
          FUNC_PACK_EXIT_CODE=${PIPESTATUS[0]}
          echo "func pack finished with exit code: ${FUNC_PACK_EXIT_CODE}"
          
          echo "Contents of current directory after func pack:" # Debug print
          ls -l # Debug print

          # Output the func pack log to the console
          echo "--- START func pack detailed output ---"
          cat func_pack_output.log
          echo "--- END func pack detailed output ---"

          # Fail the step if func pack did not succeed
          if [ "${FUNC_PACK_EXIT_CODE}" -ne 0 ]; then
              echo "Error: func pack command failed. Please review the detailed output above."
              exit 1
          fi

          # Verify if the zip file was created
          if [ ! -f "./functionapp.zip" ]; then
              echo "Error: functionapp.zip was not created by func pack."
              exit 1
          fi
          echo "functionapp.zip successfully created." # Debug print


      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: function-app-package
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/functionapp.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: function-app-package
          path: .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7D8FCE06FB7645EBA96BA9F751E0BAAE }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_514CC124C6E04EE8BE252B67D072BC54 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_0BC5FB394EFC450BAC2792EF41A7637E }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'hso-find-your-rep-api'
          slot-name: 'Production'
          package: functionapp.zip
